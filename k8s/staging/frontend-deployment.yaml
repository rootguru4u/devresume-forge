apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-staging
  namespace: staging
  labels:
    app: frontend
    environment: staging
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: frontend
      environment: staging
  template:
    metadata:
      labels:
        app: frontend
        environment: staging
    spec:
      containers:
      - name: frontend
        image: ghcr.io/yourusername/devresume-forge/frontend:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "staging"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-staging
  namespace: staging
  labels:
    app: frontend
    environment: staging
spec:
  selector:
    app: frontend
    environment: staging
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-staging-ingress
  namespace: staging
  labels:
    app: frontend
    environment: staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
spec:
  tls:
  - hosts:
    - staging.devresume-forge.com
    secretName: frontend-staging-tls
  rules:
  - host: staging.devresume-forge.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-staging
            port:
              number: 80 