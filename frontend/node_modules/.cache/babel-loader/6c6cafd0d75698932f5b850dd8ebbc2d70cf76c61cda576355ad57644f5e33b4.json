{"ast":null,"code":"var _jsxFileName = \"/Users/sdudhbhate/shyam_app_work/resume_app/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authApi } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      const response = await authApi.getProfile();\n      setUser(response.data.user);\n      setIsAuthenticated(true);\n    } catch (error) {\n      // Auth check failed\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('user');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authApi.login({\n        email,\n        password\n      });\n      const {\n        user: userData,\n        token,\n        refreshToken\n      } = response.data;\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('refreshToken', refreshToken);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      setIsAuthenticated(true);\n      toast.success(`Welcome back, ${userData.firstName}!`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response$data$;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.error) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await authApi.register(userData);\n      const {\n        user: newUser,\n        token,\n        refreshToken\n      } = response.data;\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('refreshToken', refreshToken);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      setUser(newUser);\n      setIsAuthenticated(true);\n      toast.success(`Welcome to DevResume Forge, ${newUser.firstName}!`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data, _error$response2$data2;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : (_error$response2$data2 = _error$response2$data.error) === null || _error$response2$data2 === void 0 ? void 0 : _error$response2$data2.message) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      await authApi.logout();\n    } catch (error) {\n      // Logout error handled silently\n    } finally {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('user');\n      setUser(null);\n      setIsAuthenticated(false);\n      toast.success('Logged out successfully');\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      setLoading(true);\n      const response = await authApi.updateProfile(profileData);\n      const updatedUser = response.data.user;\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      toast.success('Profile updated successfully');\n      return {\n        success: true,\n        user: updatedUser\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data, _error$response3$data2;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : (_error$response3$data2 = _error$response3$data.error) === null || _error$response3$data2 === void 0 ? void 0 : _error$response3$data2.message) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout,\n    updateProfile,\n    checkAuthStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authApi","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","checkAuthStatus","token","localStorage","getItem","response","getProfile","data","error","removeItem","login","email","password","userData","refreshToken","setItem","JSON","stringify","success","firstName","_error$response","_error$response$data","_error$response$data$","message","register","newUser","_error$response2","_error$response2$data","_error$response2$data2","logout","updateProfile","profileData","updatedUser","_error$response3","_error$response3$data","_error$response3$data2","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sdudhbhate/shyam_app_work/resume_app/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authApi } from '../services/api';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n\n      const response = await authApi.getProfile();\n      setUser(response.data.user);\n      setIsAuthenticated(true);\n    } catch (error) {\n      // Auth check failed\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('user');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authApi.login({ email, password });\n      const { user: userData, token, refreshToken } = response.data;\n\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('refreshToken', refreshToken);\n      localStorage.setItem('user', JSON.stringify(userData));\n\n      setUser(userData);\n      setIsAuthenticated(true);\n      toast.success(`Welcome back, ${userData.firstName}!`);\n      \n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error?.message || 'Login failed';\n      toast.error(message);\n      return { success: false, error: message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      const response = await authApi.register(userData);\n      const { user: newUser, token, refreshToken } = response.data;\n\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('refreshToken', refreshToken);\n      localStorage.setItem('user', JSON.stringify(newUser));\n\n      setUser(newUser);\n      setIsAuthenticated(true);\n      toast.success(`Welcome to DevResume Forge, ${newUser.firstName}!`);\n      \n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error?.message || 'Registration failed';\n      toast.error(message);\n      return { success: false, error: message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authApi.logout();\n    } catch (error) {\n      // Logout error handled silently\n    } finally {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('user');\n      setUser(null);\n      setIsAuthenticated(false);\n      toast.success('Logged out successfully');\n    }\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      setLoading(true);\n      const response = await authApi.updateProfile(profileData);\n      const updatedUser = response.data.user;\n      \n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      toast.success('Profile updated successfully');\n      \n      return { success: true, user: updatedUser };\n    } catch (error) {\n      const message = error.response?.data?.error?.message || 'Profile update failed';\n      toast.error(message);\n      return { success: false, error: message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout,\n    updateProfile,\n    checkAuthStatus\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}